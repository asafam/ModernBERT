# Note that some of the fields in this template haven't been filled in yet.
# Please resolve any `null` fields before launching!

# Follow the instructions in the README to set up ./data/c4
# Or point data paths to your remote C4 dataset
data_local: ./data/hebrewmodernbert/v20250428
data_remote: # If blank, files must be present in data_local

max_seq_len: 1024
tokenizer_name: tokenizer # switch to bert tokenizer until we add [MASK] token to the llama tokenizer meta-llama/Llama-2-7b-hf
mlm_probability: 0.3 # FlexBERT should use 30% masking for optimal performance

# Run Name
run_name: modern-bert-base-phase-0.1-pretrain

# Model
model:
  name: flex_bert
  recompute_metric_loss: false # recompute metric loss, use if passing label_smoothing to record non-label-smoothed loss as a metric
  pretrained_model_name: bert-base-uncased #${tokenizer_name}
  # pretrained_checkpoint: checkpoints/modern-bert-base-phase-0.1-pretrain/ckpt_v20250501/ep0-ba10500-rank0.pt # If set, will load from this checkpoint instead of training from scratch
  tokenizer_name: ${tokenizer_name}
  # FlexBERT 'base' generally uses the default architecture values from the Hugging Face BertConfig object
  # Note: if using the pretrained_checkpoint argument to create a model from an existing checkpoint, make sure
  # the model_config settings match the architecture of the existing model
  model_config:
    num_attention_heads: 12 # bert-base default
    num_hidden_layers: 22 # bert-base default
    hidden_size: 768
    intermediate_size: 1152
    layer_norm_eps: 1e-5
    attention_layer: rope
    attention_probs_dropout_prob: 0.0
    attn_out_bias: false
    attn_out_dropout_prob: 0.1
    attn_qkv_bias: false
    bert_layer: prenorm
    embed_dropout_prob: 0.0
    embed_norm: false
    final_norm: true
    embedding_layer: sans_pos
    loss_function: fa_cross_entropy
    loss_kwargs:
      reduction: mean
    max_position_embeddings: ${max_seq_len}
    mlp_dropout_prob: 0.0
    mlp_in_bias: false
    mlp_layer: mlp
    mlp_out_bias: false
    normalization: layernorm
    norm_kwargs:
      eps: 1e-6
      bias: false
    padding: unpadded
    sparse_prediction: false
    rotary_emb_dim: null # will be set to headdim by default
    rotary_emb_base_local: 10000.0
    rotary_emb_base: 160000.0
    rotary_emb_scale_base: null
    rotary_emb_interleaved: false
    hidden_act: gelu
    init_method: full_megatron
    init_std: 0.02
    init_cutoff_factor: 2.0
    init_small_embedding: False
    deterministic_fa2: false
    initial_attention_layer: null
    initial_bert_layer: null
    initial_mlp_layer: null
    num_initial_layers: 0
    skip_first_prenorm: true
    sliding_window: 128
    global_attn_every_n_layers: 3
    unpad_embeddings: true
    pad_logits: false
    compile_model: false #true
    vocab_size: 100000
    type_vocab_size: 1

# Dataloaders
train_loader:
  name: text
  dataset:
    local: ${data_local}
    remote: ${data_remote}
    split: train
    tokenizer_name: ${tokenizer_name}
    max_seq_len: ${max_seq_len}
    shuffle: true
    mlm_probability: ${mlm_probability}
  drop_last: true
  num_workers: 8

eval_loader:
  name: text
  dataset:
    local: ${data_local}
    remote: ${data_remote}
    split: validation
    tokenizer_name: ${tokenizer_name}
    max_seq_len: ${max_seq_len}
    shuffle: false
    mlm_probability: 0.15 # We always evaluate at 15% masking for consistent comparison
  drop_last: false
  num_workers: 24

# Optimization
scheduler:
  name: linear_decay_with_warmup
  t_warmup: 0.06dur # Warmup for 6% of the training duration ~50B tokens
  alpha_f: 0.02 # Linearly decay to 0.02x the full LR by the end of the training duration

optimizer:
  name: decoupled_stableadamw
  lr: 8.0e-4 # Peak learning rate
  betas:
  - 0.9
  - 0.98
  eps: 1.0e-06
  weight_decay: 1.0e-5 # Amount of weight decay regularization
  filter_bias_norm_wd: true # If True, doesn't apply weight decay to norm layers and biases

# algorithms:

max_duration: 425_000_000_000tok
eval_interval: 10000ba

# System
seed: 17
global_train_batch_size: 4096 # 26 * 160 microbatches / 8 Gpu 
device_train_microbatch_size: 128
# device_train_microbatch_size: auto
precision: amp_bf16

global_eval_batch_size: 256
device_eval_microbatch_size: 128

# Logging
progress_bar: true # was false
log_to_console: false # was true
console_log_interval: 10ba

algorithms:
  gradient_clipping:
    clipping_type: norm
    clipping_threshold: 1.0

callbacks:
  speed_monitor:
    window_size: 50
  lr_monitor: {}

# (Optional) W&B logging
loggers:
  wandb:
    project: HebModernBERT-phase0.1
    entity: asafam

# (Optional) Profiler
# profiler:
#   composer_trace_dir: profiler/${run_name}/${timestamp}/composer_profiler
#   torch_trace_dir:  profiler/${run_name}/${timestamp}/torch_profiler

# (Optional) Checkpoint to local filesystem or remote object store
save_interval: 3500ba
save_num_checkpoints_to_keep: 10  # Important, this cleans up checkpoints saved to DISK
save_folder: checkpoints/${run_name}/${timestamp}/ckpt    # e.g. './{run_name}/ckpt' (local) or 's3://mybucket/mydir/{run_name}/ckpt' (remote)

# (Optional) Load from local filesystem or remote object store to
# start from an existing model checkpoint;
# e.g. './ckpt/latest-rank{rank}.pt' (local), or
# 's3://mybucket/mydir/ckpt/latest-rank{rank}.pt' (remote)
# load_path: null
